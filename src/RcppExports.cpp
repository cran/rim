// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// trim
std::string trim(std::string s);
RcppExport SEXP _rim_trim(SEXP sSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string >::type s(sSEXP);
    rcpp_result_gen = Rcpp::wrap(trim(s));
    return rcpp_result_gen;
END_RCPP
}
// checkCommand
std::string checkCommand(std::string command);
RcppExport SEXP _rim_checkCommand(SEXP commandSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string >::type command(commandSEXP);
    rcpp_result_gen = Rcpp::wrap(checkCommand(command));
    return rcpp_result_gen;
END_RCPP
}
// dissect_chunk
Rcpp::List dissect_chunk(std::vector<std::string> code);
RcppExport SEXP _rim_dissect_chunk(SEXP codeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::vector<std::string> >::type code(codeSEXP);
    rcpp_result_gen = Rcpp::wrap(dissect_chunk(code));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_rim_trim", (DL_FUNC) &_rim_trim, 1},
    {"_rim_checkCommand", (DL_FUNC) &_rim_checkCommand, 1},
    {"_rim_dissect_chunk", (DL_FUNC) &_rim_dissect_chunk, 1},
    {NULL, NULL, 0}
};

RcppExport void R_init_rim(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
